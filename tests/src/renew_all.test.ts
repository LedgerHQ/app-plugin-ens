import { processTest, populateTransaction } from "./test.fixture";

const contractName = "BulkRenewal"; // <= Name of the smart contract

const testLabel = "bulk_renewal_renew_all"; // <= Name of the test
const testDirSuffix = "bulk_renewal_renew_all"; // <= directory to compare device snapshots to
const testNetwork = "ethereum";
const signedPlugin = false;

const contractAddr = "0xff252725f6122a92551a5fa9a6b6bf10eb0be035"; // <= Address of the smart contract
const chainID = 1;

// From : https://etherscan.io/tx/0x5cbd076505066034c728066480b7930a6cb3b4e55b8795e49658a9ca46e29857
const inputData = "0xe8d6dbb400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000001e18558000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000002c0000000000000000000000000000000000000000000000000000000000000000f736f7665726569676e77616c6c65740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d7061697277697365747275737400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c706176696c6c696f6e6875620000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f776f6e6465726d616e6e6174696f6e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000096e667462616e6b616900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007636f6e7478747300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b6e65776e66747370616365000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e666c7569646c6971756964697479000000000000000000000000000000000000";
// Create serializedTx and remove the "0x" prefix
const value = "3.1";
const serializedTx = populateTransaction(contractAddr, inputData, chainID, value);
const devices = [
   {
     name: "nanos",
     label: "Nano S",
     steps: 5, // <= Define the number of steps for this test case and this device
   },
  {
    name: "nanox",
    label: "Nano X",
    steps: 5, // <= Define the number of steps for this test case and this device
  },
  {
     name: "nanosp",
     label: "Nano S+",
     steps: 5, // <= Define the number of steps for this test case and this device
   },
];

devices.forEach((device) =>
  processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork)
);
